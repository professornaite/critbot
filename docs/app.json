[{"name":"app.R","content":"# check-me and add-me shiny\nlibrary(shiny)\nlibrary(dplyr)\n\n# using critical_words_df\n\nui <- fluidPage(\n  titlePanel(\"CritBot Word Query\"),\n  sidebarLayout(\n    sidebarPanel(\n      textInput(\"word\", \"Enter a word to query:\"),\n      actionButton(\"submit\", \"Submit\")\n    ),\n    mainPanel(\n      textOutput(\"result\"),\n      uiOutput(\"agreement_ui\")\n    )\n  )\n)\n\nserver <- function(input, output, session) {\n  result <- reactiveVal(NULL)\n  \n  observeEvent(input$submit, {\n    word <- tolower(input$word)\n    found_word <- critical_words_df %>%\n      filter(tolower(Keyword) == word)\n    \n    if (nrow(found_word) > 0) {\n      result(list(word = word, definition = found_word$Definition[1]))\n    } else {\n      result(NULL)\n    }\n  })\n  \n  output$result <- renderText({\n    req(result())\n    if (!is.null(result())) {\n      paste(\"Definition:\", result()$definition)\n    } else {\n      \"Word not found in the database.\"\n    }\n  })\n  \n  output$agreement_ui <- renderUI({\n    req(result())\n    if (!is.null(result())) {\n      tagList(\n        radioButtons(\"agreement\", \"Do you agree with this definition?\",\n                     choices = c(\"Yes\", \"No\")),\n        conditionalPanel(\n          condition = \"input.agreement == 'No'\",\n          textInput(\"new_definition\", \"Enter your alternative definition:\"),\n          actionButton(\"submit_new\", \"Submit Alternative Definition\")\n        )\n      )\n    }\n  })\n  \n  observeEvent(input$submit_new, {\n    req(input$new_definition)\n    \n    new_entry <- data.frame(\n      Word = result()$word,\n      Alternative_Definition = input$new_definition,\n      Timestamp = Sys.time()\n    )\n    \n    file_path <- \"alternative_definitions.csv\"\n    \n    if (!file.exists(file_path)) {\n      write.csv(new_entry, file = file_path, row.names = FALSE)\n    } else {\n      write.table(new_entry, file = file_path, sep = \",\", col.names = FALSE, row.names = FALSE, append = TRUE)\n    }\n    \n    showNotification(\"Your alternative definition has been saved.\", type = \"message\")\n  })\n}\n\nshinyApp(ui, server)\n","type":"text"}]
